{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "options": {
          "responseMode": "lastNode"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        0,
        -16
      ],
      "id": "31071495-3740-4e89-9238-533dff20d462",
      "name": "When chat message received",
      "webhookId": "d5950bd6-2475-4d3f-9728-46472c6c8a86"
    },
    {
      "parameters": {
        "fieldToSplitOut": "chatInput",
        "include": "allOtherFields",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        224,
        -16
      ],
      "id": "358f39c5-52e3-4574-8c47-7a72716fb036",
      "name": "Split Out"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.apify.com/v2/actor-tasks/cinematic_litre~youtube-scraper-task/run-sync-get-dataset-items?token=your token",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "value": "={{ $json.chatInput }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        448,
        -176
      ],
      "id": "bb508f4b-8146-481e-8248-53b75a2ccdbb",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.apify.com/v2/actor-tasks/cinematic_litre~google-search-results-scraper-task/run-sync-get-dataset-items?token=your token",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "value": "={{ $json.chatInput }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        448,
        -16
      ],
      "id": "2c648bfd-cafd-4d50-95cc-060bfbc4a5e0",
      "name": "HTTP Request1",
      "alwaysOutputData": false
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        688,
        -16
      ],
      "id": "f50e7da7-9cc9-471e-892e-d81900e89022",
      "name": "Merge"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.description }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        80,
        384
      ],
      "id": "69d3c3de-d154-47e4-8e04-dce91a2a9c7c",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "appY6rX5eJx4R4ClU",
          "mode": "list",
          "cachedResultName": "n8n Agent data",
          "cachedResultUrl": "https://airtable.com/appY6rX5eJx4R4ClU"
        },
        "table": {
          "__rl": true,
          "value": "tblNNUTmjaSXGdnFd",
          "mode": "list",
          "cachedResultName": "Content idea generation",
          "cachedResultUrl": "https://airtable.com/appY6rX5eJx4R4ClU/tblNNUTmjaSXGdnFd"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [
            {
              "id": "Name",
              "displayName": "Name",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Attachments",
              "displayName": "Attachments",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "array",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Attachment Summary",
              "displayName": "Attachment Summary",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        224,
        384
      ],
      "id": "17d8e337-8636-4feb-b898-467cde21cd8e",
      "name": "Create a record in Airtable",
      "credentials": {
        "airtableTokenApi": {
          "id": "erVrZDiX1rD9rF4v",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "claude-sonnet-4-20250514",
          "mode": "list",
          "cachedResultName": "Claude Sonnet 4"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.3,
      "position": [
        -64,
        384
      ],
      "id": "b084e022-f3fd-4b94-ab07-640ca0eca543",
      "name": "Anthropic Chat Model",
      "credentials": {
        "anthropicApi": {
          "id": "UWOGdTiMdvOsARO4",
          "name": "Anthropic account"
        }
      }
    },
    {
      "parameters": {
        "instructions": "From the input data, keep only these fields:\n- url\n- title\n- description\n- emphasizedKeywords\n\n\nOutput as a clean JSON object with only those fields.\n",
        "codeGeneratedForPrompt": "From the input data, keep only these fields:\n- url\n- title\n- description\n- emphasizedKeywords\n\n\nOutput as a clean JSON object with only those fields.\n",
        "jsCode": "const items = $input.all();\nconst updatedItems = items.map((item) => {\n  return {\n    url: item?.json?.url,\n    title: item?.json?.title,\n    description: item?.json?.text,\n    emphasizedKeywords: item?.json?.hashtags,\n  };\n});\n\nreturn updatedItems;\n"
      },
      "type": "n8n-nodes-base.aiTransform",
      "typeVersion": 1,
      "position": [
        864,
        -16
      ],
      "id": "a2ea8ddf-877f-4f92-95b3-1c0b4f5e93e5",
      "name": "AI Transform"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        384,
        384
      ],
      "id": "ca903849-943c-4b23-b0f1-e6d23fd76f9c",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "xBzpayYVzH85DC9c",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Analyze the following content data:\n\nTitle: {{ $json.title }}\nDescription: {{ $json.description }}\nKeywords: {{ $json.emphasizedKeywords }}\n\nYour task:\n- Do NOT repeat existing ideas from the title/description.\n- Extract the underlying themes, problems, or opportunities.\n- Based on that, generate **new and original workflow ideas** that have not been directly mentioned.\n- Output 5 unique workflows in JSON format, each with:\n  - \"workflow_name\": short catchy name\n  - \"workflow_description\": what it does and why itâ€™s useful\n  - \"potential_users\": who would benefit (marketers, engineers, solopreneurs, etc.)\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        16,
        208
      ],
      "id": "271e72e0-5245-47aa-b4b5-3bbdfdf17daa",
      "name": "Content Idea Generation"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a Research-to-LinkedIn Content Agent.  \nYour role is to take structured  {{ $json.output }}          workflow outputs and transform them into short, engaging LinkedIn-ready posts.  \n\nYou must:  \n1. Summarize the key workflow or research idea in plain, engaging language.  \n2. Highlight why it matters for companies or professionals (benefit, opportunity, or risk avoided).  \n3. Keep the tone conversational, insight-driven, and scroll-stopping.  \n4. Output each idea as 2-3 variations of short posts (max 3 sentences each).  \n5. Avoid jargon; make it sound like practical advice or a lightbulb moment.  \n6. Always return results in clean JSON for parsing.  \n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        368,
        208
      ],
      "id": "ff8af16b-75ed-4c1c-bcaf-c51f4f5db5fe",
      "name": "Research Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        672,
        384
      ],
      "id": "7a37a974-d06c-4d82-b27d-3233d3621b56",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "xBzpayYVzH85DC9c",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        976,
        368
      ],
      "id": "1fad85fa-5d21-4f59-9786-eccbc42e0e2e",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "xBzpayYVzH85DC9c",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Here are multiple candidate ideas:\n\n{{ $json.output }}\n\nSelect the single best idea based on engagement potential and relevance.  \nGenerate output in this structure:\n\n{\n  \"selected_idea\": \"Idea title\",\n  \"reason_selected\": \"Why this is the best\",\n  \"linkedin_post\": \"Final LinkedIn post in brand voice\"\n}\n\n\n",
        "options": {
          "systemMessage": "You are a LinkedIn strategist and marketing analyst.  \nYour role is to review multiple candidate content ideas, evaluate which one has the highest potential for engagement and value, and turn it into a LinkedIn-ready post.  \nYou must:\n1. Analyze all the given ideas and select the single most impactful one.  \n2. Justify briefly (1 sentence) why this idea is the best.  \n3. Write a LinkedIn post draft in the brand voice: confident, insightful, and straightforward.  \n4. Keep the post short (under 200 words) and optimized for readability.  \n5. Output in clean JSON for easy parsing.  "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1024,
        208
      ],
      "id": "75be6ce8-341a-4b3d-a2e8-9285afc5eae6",
      "name": "LinkedIn Post Generating Agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=I need you to be Marketing analyst and select one top best post from  {{ $json.output }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        720,
        208
      ],
      "id": "9e4f1ebc-e0fd-4b90-9278-aa529dbf8975",
      "name": "Marketing AI Agent"
    },
    {
      "parameters": {
        "jsCode": "// Input is an array of objects with \"output\" as JSON string\n// Example: items[0].json.output = \"{ \\\"selected_idea\\\": ... }\"\n\nreturn items.map(item => {\n  let parsed;\n  try {\n    parsed = JSON.parse(item.json.output);\n  } catch (e) {\n    parsed = { selected_idea: \"\", reason_selected: \"\", linkedin_post: item.json.output };\n  }\n\n  // Format into LinkedIn style text\n  const formattedPost = \n`ðŸ’¡ ${parsed.selected_idea}\n\nWhy it works: ${parsed.reason_selected}\n\nðŸš€ Draft LinkedIn Post:\n${parsed.linkedin_post}\n`;\n\n  return {\n    json: {\n      selected_idea: parsed.selected_idea,\n      reason_selected: parsed.reason_selected,\n      linkedin_post: parsed.linkedin_post,\n      linkedin_formatted: formattedPost\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1408,
        208
      ],
      "id": "6e909c7d-1a81-4ea6-9669-db8bc3a1d27e",
      "name": "Code"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "sendAndWait",
        "user": {
          "__rl": true,
          "value": "USLACKBOT",
          "mode": "list",
          "cachedResultName": "slackbot"
        },
        "message": "Do you agree?",
        "options": {}
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        1648,
        208
      ],
      "id": "ba6aa722-1113-493e-a082-e6fc4710403a",
      "name": "Human in loop",
      "webhookId": "3488bdc1-8603-4bcd-9540-667929d0e4c2",
      "credentials": {
        "slackOAuth2Api": {
          "id": "c4O7pStSlUsTS14z",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "resource": "__CUSTOM_API_CALL__"
      },
      "type": "n8n-nodes-base.linkedIn",
      "typeVersion": 1,
      "position": [
        1968,
        208
      ],
      "id": "f0155cc7-9500-436f-88e5-5f925c3660d3",
      "name": "LinkedIn",
      "credentials": {
        "linkedInOAuth2Api": {
          "id": "ykXbsDgSR4ZcchVV",
          "name": "LinkedIn account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "AI Transform",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Content Idea Generation",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Create a record in Airtable": {
      "ai_tool": [
        [
          {
            "node": "Content Idea Generation",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Content Idea Generation",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Transform": {
      "main": [
        [
          {
            "node": "Content Idea Generation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Research Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Content Idea Generation": {
      "main": [
        [
          {
            "node": "Research Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Research Agent": {
      "main": [
        [
          {
            "node": "Marketing AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Marketing AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "LinkedIn Post Generating Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Marketing AI Agent": {
      "main": [
        [
          {
            "node": "LinkedIn Post Generating Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LinkedIn Post Generating Agent": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Human in loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Human in loop": {
      "main": [
        [
          {
            "node": "LinkedIn",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "0da182a3-19a8-4a79-bf85-c6460bb25fb3",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "3100dd113ac345470a0426daaa37f0f50f98561dd03a52ae4fe043137042d3c8"
  },
  "id": "chNCq4a0AZJEK0jk",
  "tags": []
}